version: '3.8'

services:                         #컨테이너 정의
  app:                            #애플리케이션 컨테이너 정의
    image: discodeit:1.0
    build:
      context: .                  #현재 디렉토리의 도커파일을 통해 이미지 빌드
      dockerfile: Dockerfile
    container_name: discodeit
    ports:
      - "8081:80"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/discodeit  #도커 네트워크 브릿지
      - STORAGE_TYPE=${STORAGE_TYPE}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY}
      - AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    depends_on:                    #DB 컨테이너 실행 후 실행
      - db
    volumes:
      - binary-content-storage:/app/.discodeit/storage
    networks:
      - discodeit-network
  db:
    image: postgres:16-alpine
    container_name: discodeit-db
    environment:
      - POSTGRES_DB=discodeit
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      #prod가 ddl-auto=validate 옵션을 사용하므로
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - discodeit-network


volumes:
  binary-content-storage:
  postgres-data:

networks:
  discodeit-network:
    driver: bridge
